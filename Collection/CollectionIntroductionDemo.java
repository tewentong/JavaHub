/*
  Java类集框架 
    Java类集简介：
        从JDK1.2开始Java引入了类集的开发框架 所谓的类集指的就是一套动态对象数组的实现方案
        在实际的开发之中，没有任何一项开发可以离开数组，但是传统的数组实现起来非常的繁琐， 而且长度是其致命伤
        正是因为长度的问题，所以传统的数组是不可能大范围使用的，但是我们的开发又不可能离开数组 所以最初就只能依靠一些数据结构来实现动态的数组处理
        而其中最重要的两个结构就是：链表与树 但是面对这些数据结构的实现又不得不面对如下的一些问题：
            1.数据结构的代码实现困难，对于一般的开发者是无法进行使用的
            2.对于链表或二叉树当进行更新处理的时候的维护是非常麻烦的 
            3.对于链表或二叉树还需要尽可能保证其操作的性能
        正是因为这样的原因，所以从JDK1.2开始Java开始引入了类集
        主要就是对常见的数据结构进行完整的实现包装，并切提供有一系列的接口与实现子类来帮助用户减少数据结构所带来的开发困难
        但是最初的类集实现由于Java本身的技术所限，所以对于数据的控制并不严格，全部使用了Object类型进行数据接收
        而在JDK1.5之后由于泛型技术的推广，所以类集本身也得到了良好的改进，可以直接利用泛型来保存相同类型的数据
        并且随着数据量的不断增加，从JDK1.8开始类集中的实现算法也得到了良好的性能提升 在整个的类集框架里面提供有如下的几个核心接口：
            Collection、List、Set、Map、Iterator、Enumeration、Queue、ListIterator
 */
public class CollectionIntroductionDemo {
    public static void main(String[] args) {

    }
}