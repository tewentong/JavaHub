Runnable更方便，因为Runnable可以避免单继承的局限，同时可以更好的进行功能的扩充

public class Thread extends Object implements Runnable{}
发现现在Thread类也是Runnable接口的子类，那么在之前继承Thread类的时候实际上还是覆写的Runnable接口的run()方法


多线程的设计之中，使用了代理设计模式的结构，用户自定义的线程主体只是负责项目核心功能的实现，而所有的辅助实现全部交由Thread类完成

在进行Thread启动多线程的时候调用的是start()方法，而后找到的是run()方法：
    当通过Thread类的构造方法传递了一个Runnable的接口对象的时候，那么该接口将被Thread类中的target属性所保存，
    在start()方法执行的时候会调用Thread类中的run()方法，而这个run()方法调用Runnable接口子类被覆写过的run()方法。

多线程开发的本质实际上是在于多个线程可以进行同一资源的抢占，那么Thread主要描述的是线程，而资源的描述是通过Runnable完成的。